#!/bin/bash
#
# Usage: install 
#

# Stops execution if any command fails.
set -eo pipefail

createLinkSafely() {
    directory="$1"
    file="$2"
    fullPath="$directory"/"$file"
    # Create directory if it doesent exist.
    if [ ! -d "$directory" ]; then
        echo "install.sh: Creating directory $directory."
        mkdir -p "$directory"
    fi
    # Create link if file doesn't exist
    if [[ ! -f "$fullPath" ]]; then
        echo "install.sh: Creating link $fullPath"
        ln -s $(pwd)/"$file" "$fullPath" 
    else
        echo "install.sh: WARNING: File $fullPath already exists." 
        echo "You will have to merge or overvrite it manualy."
    fi	
}

copyFileSafely() {
    destination="$1"
    origin="$2"
    # Copy file if file doesn't exist
    if [[ ! -f "$destination" ]]; then
        echo "install.sh: Copying file $origin to $destination"
        cp "$origin" "$destination" 
    else
        echo "install.sh: WARNING: File $destination already exists." 
        echo "You will have to merge or overvrite it manualy."
    fi	
}

main() {
    # Create link to functions and copy conf file.
    createLinkSafely ~/.standard_aliases functions
    copyFileSafely ~/.standardrc standardrc
    touch ~/.standardrc
    # Create ~/.bashrc if it doesen't exist.
    if [[ ! -f ~/.bashrc ]]; then
        touch ~/.bashrc
    fi
    # Add statement to .bashrc that will update project every
    # time bash starts, and load standard aliases and
    # shortcuts.
    if [[ -z $(grep ". ~/.standard_aliases" ~/.bashrc) ]]; then
        cat ./scripts/resources/append-to-bashrc >> ~/.bashrc
    fi
    echo "Run 'bash' for changes to take effect."
}

main "$@"
