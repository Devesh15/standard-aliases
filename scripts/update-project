#!/bin/bash
#
# Usage: update-projects
# Generates stadard_shortcuts anew, if any file in project got changed.

scriptsDir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

isProjectsStandardRcUpToDate() {
    if [[ "$scriptsDir"/../standard_aliases \
        -nt "$scriptsDir"/../standard_rc ]]; then
        return 1
    else
        return 0
    fi
}

# Tells wether the generated file standard_shortcuts is up to
# date.
areStandardShortcutsUpToDate() {
    if [[ ~/.standard_rc \
            -nt ~/.standard_aliases/standard_shortcuts ]] \
        || [[ ~/.standard_aliases/standard_aliases \
            -nt ~/.standard_aliases/standard_shortcuts ]] \
        || [[ "$scriptsDir"/generate-shortcuts \
            -nt ~/.standard_aliases/standard_shortcuts ]] \
        || [[ "$scriptsDir"/update-project \
            -nt ~/.standard_aliases/standard_shortcuts ]] \
        || [[ "$scriptsDir"/parse-rc.py \
            -nt ~/.standard_aliases/standard_shortcuts ]]; then
        return 1 
    else
        return 0 
    fi
}

main() {
    areStandardShortcutsUpToDate
    if [[ $? -ne 0 ]]; then
        "$scriptsDir"/generate-shortcuts
    fi
    isProjectsStandardRcUpToDate
    if [[ $? -ne 0 ]]; then
        newRc=$("$scriptsDir"/update-rc.py)
        echo "$newRc" >  "$scriptsDir"/../standard_rc
    fi
}

main "$@"
